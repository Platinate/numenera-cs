{"version":3,"file":"static/js/326.e6be7a43.chunk.js","mappings":"0LAOA,MAAMA,EAAYC,EAAAA,MAAW,IAAM,uDAwDnC,EAhDoCC,IAI7B,IAJ8B,OACnCC,EAAM,WACNC,EAAU,eACVC,GACDH,EACC,MAAMI,EAA0BA,CAACC,EAAYC,KAC3C,MAAMC,EAAaN,EAAOO,WAAWC,GAAMA,EAAEJ,KAAOA,IAChDE,GAAc,IAChBN,EAAOM,GAAYG,KAAOJ,GAE5BH,EAAeF,EAAO,EAGlBU,EAA8BA,CAACN,EAAYC,KAC/C,MAAMC,EAAaN,EAAOO,WAAWC,GAAMA,EAAEJ,KAAOA,IAChDE,GAAc,IAChBN,EAAOM,GAAYK,WAAaN,GAElCH,EAAeF,EAAO,EAGlBY,EAAuBR,IAC3B,MAAMS,EAAUb,EAAOc,QAAQN,GAAMA,EAAEJ,KAAOA,IAC9CF,EAAeW,EAAQ,EAGzB,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,UAAUC,QAASpB,EAAYqB,MAAO,CAAEC,aAAc,IAAKN,SAAC,2BAGzEC,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,OAAQ,GAAGR,SACbjB,EAAO0B,KAAKC,IACXT,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEd,UACzBC,EAAAA,EAAAA,KAACrB,EAAS,CAER8B,MAAOA,EACPK,cAAepB,EACfqB,kBAAmB9B,EACnB+B,sBAAuBxB,GAJlBiB,EAAMvB,YASf,C","sources":["components/molecules/SkillList/SkillList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport ISkill from \"../../../models/skill\";\r\n\r\nimport \"./SkillList.css\";\r\nimport { Button, Col, Row } from \"antd\";\r\nimport { SKILL_LEVEL } from \"../../../constants/types\";\r\n\r\nconst SkillItem = React.lazy(() => import(\"../../atoms/SkillItem/SkillItem\"))\r\n\r\ninterface IProps {\r\n  skills: ISkill[];\r\n  onSkillAdd: () => void;\r\n  onSkillsUpdate: (skills: ISkill[]) => void;\r\n}\r\n\r\nconst SkillList: React.FC<IProps> = ({\r\n  skills,\r\n  onSkillAdd,\r\n  onSkillsUpdate,\r\n}) => {\r\n  const handleOnSkillNameChange = (id: number, value: string) => {\r\n    const skillIndex = skills.findIndex((s) => s.id === id);\r\n    if (skillIndex > -1) {\r\n      skills[skillIndex].name = value;\r\n    }\r\n    onSkillsUpdate(skills);\r\n  };\r\n\r\n  const handleOnSkillTrainingChange = (id: number, value: SKILL_LEVEL) => {\r\n    const skillIndex = skills.findIndex((s) => s.id === id);\r\n    if (skillIndex > -1) {\r\n      skills[skillIndex].skillLevel = value;\r\n    }\r\n    onSkillsUpdate(skills);\r\n  };\r\n\r\n  const handleOnSkillDelete = (id: number) => {\r\n    const newList = skills.filter((s) => s.id !== id);\r\n    onSkillsUpdate(newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"SkillList\">\r\n      <Button type=\"primary\" onClick={onSkillAdd} style={{ marginBottom: 16 }}>\r\n        Ajouter comp√©tence\r\n      </Button>\r\n      <Row gutter={16}>\r\n        {skills.map((skill) => (\r\n          <Col xs={24} sm={12} lg={8}>\r\n            <SkillItem\r\n              key={skill.id}\r\n              skill={skill}\r\n              onSkillDelete={handleOnSkillDelete}\r\n              onSkillNameChange={handleOnSkillNameChange}\r\n              onSkillTrainingChange={handleOnSkillTrainingChange}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillList;\r\n"],"names":["SkillItem","React","_ref","skills","onSkillAdd","onSkillsUpdate","handleOnSkillNameChange","id","value","skillIndex","findIndex","s","name","handleOnSkillTrainingChange","skillLevel","handleOnSkillDelete","newList","filter","_jsxs","className","children","_jsx","Button","type","onClick","style","marginBottom","Row","gutter","map","skill","Col","xs","sm","lg","onSkillDelete","onSkillNameChange","onSkillTrainingChange"],"sourceRoot":""}